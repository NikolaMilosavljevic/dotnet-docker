{{
    _ ARGS:
        - url-suffix (optional): Suffix string to append the end of the URL.
        - is-internal (optional): Whether the Dockerfile is targeting an internal build of the product. ^

    set dotnetVersion to join(slice(split(PRODUCT_VERSION, "."), 0, 2), ".") ^
    set isServerCore to find(OS_VERSION, "windowsservercore") >= 0 ^
    set isNanoServer to find(OS_VERSION, "nanoserver") >= 0 ^
    set useProgramFilesDir to (isServerCore && !ARGS["is-internal"]) ^
    set dotnetDir to when(useProgramFilesDir, "%ProgramFiles%\dotnet", "dotnet") ^
    set aspnetCoreZipFile to "aspnetcore.zip" ^
    set aspnetVersion to when(ARGS["use-explicit-version"], VARIABLES[cat("aspnet|", dotnetVersion, "|build-version")], "%ASPNET_VERSION%") ^
    set isInternalStableBranding to ARGS["is-internal"] &&
        (find(VARIABLES[cat("sdk|", dotnetVersion, "|build-version")], "-servicing") >= 0 ||
        find(VARIABLES[cat("sdk|", dotnetVersion, "|build-version")], "-rtm") >= 0) ^
    set aspnetVersionFile to when(isInternalStableBranding,
        VARIABLES[cat("dotnet|", dotnetVersion, "|product-version")],
        aspnetVersion) ^
    set url to cat(
        VARIABLES[cat("base-url|", dotnetVersion, "|", VARIABLES["branch"])],
        "/aspnetcore/Runtime/", aspnetVersion, "/aspnetcore-runtime-", aspnetVersionFile, "-win-x64.zip", ARGS["url-suffix"])
}}# Install ASP.NET Core Runtime
RUN {{InsertTemplate("../Dockerfile.windows.download-file",
        [
            "out-file": aspnetCoreZipFile,
            "url": url
        ], "        ")}} `
    && {{InsertTemplate("../Dockerfile.windows.verify.file.checksum",
        [
            "out-file": aspnetCoreZipFile,
            "sha": VARIABLES[cat("aspnet|", dotnetVersion, "|win|x64|sha")],
            "sha-var-name": "aspnetcore_sha512"
        ], "        ")}} `
    {{if !useProgramFilesDir:&& mkdir "{{dotnetDir}}\shared\Microsoft.AspNetCore.App"}} `
    && {{InsertTemplate("../Dockerfile.windows.extract-zip",
            [
                "file": aspnetCoreZipFile,
                "dest-dir": dotnetDir
                "extract-paths": [
                    "./shared/Microsoft.AspNetCore.App"
                ]
            ], "        ")}} `
    && del /F {{aspnetCoreZipFile}}

trigger:
  batch: true
  branches:
    include:
    - nightly
  paths:
    include:
    - manifest.json
    - manifest.versions.json
    - src/*
pr: none

variables:
- template: ../common/templates/variables/dotnet/common.yml

stages:
- stage: Generate_Build_and_Test
  displayName: Generate Build and Test
  jobs:
  - job: Update_Dockerfiles
    displayName: Update dockerfiles
    pool:
      vmImage: $(defaultLinuxAmd64PoolImage)
    steps:
    - template: /eng/common/templates/steps/run-pwsh-with-auth.yml@self
      parameters:
        displayName: AZ login
        serviceConnection: $(test.serviceConnectionName)
        command: >
          $azLoginArgs = '--service-principal --tenant $env:AZURE_TENANT_ID -u $env:AZURE_CLIENT_ID --federated-token $env:AZURE_FEDERATED_TOKEN';
          docker exec -e AZURE_TENANT_ID=$env:tenantId -e AZURE_CLIENT_ID=$env:servicePrincipalId -e AZURE_FEDERATED_TOKEN=$env:idToken $(testRunner.container) pwsh
          -File $(engCommonRelativePath)/Invoke-WithRetry.ps1
          "az login $azLoginArgs; az acr login -n $(acr-staging.server)"
    - powershell: |
        $args = @{
          BuildId = "2525144"
        }

        $args["InternalArtifactsAccessToken"] = "$(System.AccessToken)"
        $args["updatedependencies"] = $true
        $args["UseInternalBuild"] = $true

        $(engPath)/Get-DropVersions.ps1 @args
      displayName: Update dockerfiles
